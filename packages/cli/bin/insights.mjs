import { insightsUtils } from '@db-man/github';
import { exec } from 'child_process';
import { writeFile } from 'fs/promises';

import { getDbs } from './utils.mjs';

/**
 * Function to execute git log command
 * @param {*} dir e.g. "db_files_dir"
 * @param {*} dbTable e.g. "iam/users"
 * @returns {Promise<string>} the stdout of the git log command
 */
function getGitLogAsync(dir, dbTable) {
  return new Promise((resolve, reject) => {
    // git --no-pager log --follow --numstat --pretty="%H %ad" --date=short -- db_files_dir/iam/users.data.json
    const cmd = `git --no-pager log --follow --numstat --pretty="%H %ad" --date=short -- ${dir}/${dbTable}.data.json`;
    console.debug(`Executing git log command: ${cmd}`);
    exec(cmd, (error, stdout, stderr) => {
      if (error) {
        console.error(`Error executing git log: ${error}`);
        return reject(error);
      }
      if (stderr) {
        console.error(`stderr: ${stderr}`);
        return reject(new Error(stderr));
      }
      // console.log(`Git log output:\n${stdout}`);
      resolve(stdout);
    });
  });
}

/**
 * Print insights for a db table
 * @param {*} dir
 * @param {*} dbTable
 * @returns {undefined} Output the insights to stdout
 * Output example:
 * ```csv
 * date,total_lines_of_file_on_this_day
 * 2024-10-31,2
 * 2024-10-31,2
 * ```
 */
export const printInsightsAsync = async (dir, dbTable) => {
  const rawLog = await getGitLogAsync(dir, dbTable);
  console.debug('rawLog:', rawLog);

  let tmp = insightsUtils.parseGitCommitDataToCSV(rawLog);
  tmp = insightsUtils.calcTotalLinesByDateFromGitLogs(tmp);

  // Write the converted data to stdout
  console.log(tmp.join('\n'));
};

/**
 * One table's insights can be generated by running `git --no-pager log --follow --numstat --pretty="%H %ad" --date=short -- db_files_dir/iam/users.data.json > db_files_dir/iam/users.insights.gitlog`
 * We will generate formatted git log for all tables in all databases, and save to for example `db_files_dir/iam/users.insights.gitlog`
 * An example of the formatted git log:
 * ```gitlog
 * 932091d98eacf491775cad4aac55a7130e4373f7 2024-10-31
 *
 * 2	2	db_files_dir/iam/users.data.json
 * 7e77f5ad0450aba445d91d819f9a991bb8c4bf7a 2024-10-31
 *
 * 2	2	db_files_dir/iam/users.data.json
 * ```
 */
export const generateInsightsForAllDbTablesAsync = async (dir) => {
  const dbs = await getDbs(dir);

  dbs.forEach((db) => {
    db.tables.forEach(async (table) => {
      const rawLog = await getGitLogAsync(dir, `${db.name}/${table.name}`);
      console.debug('rawLog:', rawLog);

      // save to `db_files_dir/iam/users.insights.gitlog`
      const gitLogFilePath = `${dir}/${db.name}/${table.name}.insights.gitlog`;
      console.log(`Writing git log to ${gitLogFilePath}`);
      writeFile(gitLogFilePath, rawLog, 'utf8');
    });
  });
};
